Metadata-Version: 2.1
Name: nannyml
Version: 0.3.2
Summary: The NannyML library, monitoring model performance since 2020.
Home-page: https://github.com/nnansters/nannyml
License: Apache-2.0
Author: Niels Nuyttens
Author-email: niels@nannyml.com
Requires-Python: >=3.7.1,<3.11
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Provides-Extra: dev
Provides-Extra: doc
Provides-Extra: test
Requires-Dist: Sphinx (>=4.4.0,<5.0.0); extra == "doc"
Requires-Dist: black (>=22.3.0,<23.0.0); extra == "test"
Requires-Dist: bump2version (>=1.0.1,<2.0.0); extra == "dev"
Requires-Dist: category-encoders (>=2.3.0,<3.0.0)
Requires-Dist: flake8 (>=3.9.2,<4.0.0); extra == "test"
Requires-Dist: flake8-docstrings (>=1.6.0,<2.0.0); extra == "test"
Requires-Dist: guzzle_sphinx_theme (>=0.7.11,<0.8.0)
Requires-Dist: isort (>=5.8.0,<6.0.0); extra == "test"
Requires-Dist: joblib (>=1.1.0,<2.0.0)
Requires-Dist: jupyterlab (>=3.2.9,<4.0.0); extra == "doc"
Requires-Dist: matplotlib (>=3.5.1,<4.0.0)
Requires-Dist: mypy (>=0.900,<0.901); extra == "test"
Requires-Dist: offset (>=0.0.2,<0.0.3)
Requires-Dist: pandas (>=1.3.0,<2.0.0)
Requires-Dist: pip (>=20.3.1,<21.0.0); extra == "dev"
Requires-Dist: plotly (>=5.6.0,<6.0.0)
Requires-Dist: pre-commit (>=2.12.0,<3.0.0); extra == "dev"
Requires-Dist: pytest (>=6.2.4,<7.0.0); extra == "test"
Requires-Dist: pytest-cov (>=2.12.0,<3.0.0); extra == "test"
Requires-Dist: pytest-mock (>=3.7.0,<4.0.0); extra == "test"
Requires-Dist: python-dateutil (>=2.8.2,<3.0.0)
Requires-Dist: scikit-learn (>=1.0.2,<2.0.0)
Requires-Dist: scipy (>=1.7.3,<1.8.0)
Requires-Dist: seaborn (>=0.11.2,<0.12.0)
Requires-Dist: sphinx-rtd-theme (>=1.0.0,<2.0.0); extra == "doc"
Requires-Dist: toml (>=0.10.2,<0.11.0); extra == "dev"
Requires-Dist: tox (>=3.20.1,<4.0.0); extra == "dev"
Requires-Dist: twine (>=3.3.0,<4.0.0); extra == "dev"
Requires-Dist: types-python-dateutil (>=2.8.9,<3.0.0)
Requires-Dist: virtualenv (>=20.2.2,<21.0.0); extra == "dev"
Description-Content-Type: text/markdown

<p align="center">
    <img src="https://assets.website-files.com/6099466e98d9381b3f745b9a/60994ab2b5bd890780db9c84_NannyML%20logo%20horizontal%20typfont.png">
</p>
<p align="center">
    <a href="https://pypi.org/project/nannyml/">
        <img src="https://img.shields.io/pypi/v/nannyml.svg">
    </a>
    <a href="https://pypi.org/project/nannyml/">
        <img src="https://img.shields.io/pypi/pyversions/nannyml.svg">
    </a>
    <a href="https://github.com/nannyml/nannyml/actions/workflows/dev.yml">
        <img src="https://github.com/NannyML/nannyml/actions/workflows/dev.yml/badge.svg">
    </a>
    <a href="https://codecov.io/gh/NannyML/nannyml">
        <img src="https://codecov.io/gh/NannyML/nannyml/branch/main/graph/badge.svg?token=OGpF5gVzfR">
    </a>
    <img alt="PyPI - License" src="https://img.shields.io/pypi/l/nannyml?color=green">
</p>

<p align="center">
    <strong>
        <a href="https://nannyml.com/">Website</a>
        •
        <a href="https://docs.nannyml.com">Docs</a>
        •
        <a href="https://nannymlbeta.slack.com">Community Slack</a>
    </strong>
</p>

# Basic overview

NannyML helps you monitor your ML models in production by:

* estimating performance in absence of ground truth
* calculating realized performance metrics
* detecting data drift on model inputs, model outputs and targets

# Installing the latest stable release

```python
pip install nannyml
```


# Installing the latest development version

```python
python -m pip install git+https://github.com/NannyML/nannyml
```


# Getting started

```python
import nannyml as nml
import pandas as pd

# Load some data
reference_data, analysis_data, _ = nml.load_synthetic_sample()
data = pd.concat([reference_data, analysis_data])
metadata = nml.extract_metadata(reference_data)

# Estimate performance
estimator = nml.CBPE(metadata).fit(reference_data)
estimates = estimator.estimate(data)

estimates.plot(kind='performance').show()
```

# Examples

* [Performance estimation](<https://docs.nannyml.com/latest/guides/performance_estimation.html>)
* [Realized performance calculation](https://docs.nannyml.com/latest/guides/performance_calculation.html)
* [Univariate model input drift detection](https://docs.nannyml.com/latest/guides/data_drift.html#univariate-drift-detection)
* [Multivariate model input drift detection](https://docs.nannyml.com/latest/guides/data_drift.html#drift-detection-for-model-outputs)
* [Model output drift detection](https://docs.nannyml.com/latest/guides/data_drift.html#drift-detection-for-model-outputs)
* [Model target distribution](https://docs.nannyml.com/latest/guides/data_drift.html#drift-detection-for-model-targets)

# Development setup

* Read the docs on [how to contribute](CONTRIBUTING.md)

