"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ProcessingKey:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ProcessingKeyEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
        _ProcessingKey.ValueType
    ],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ROUTING_KEY: _ProcessingKey.ValueType  # 0
    """key indicating that the attached value should be used for consistent routing."""

    PRIORITY: _ProcessingKey.ValueType  # 1
    """key indicating that the attached value indicates relative priority of this message."""

    TIMEOUT: _ProcessingKey.ValueType  # 2
    """key indicating that the accompanied message has a finite validity. The attached value contains the number of milliseconds."""

    NR_OF_RESULTS: _ProcessingKey.ValueType  # 3
    """key indicating that the requester expects at most the given number of results from this message. Use -1 for unlimited."""

class ProcessingKey(_ProcessingKey, metaclass=_ProcessingKeyEnumTypeWrapper):
    """An enumeration of possible keys for processing instructions."""

    pass

ROUTING_KEY: ProcessingKey.ValueType  # 0
"""key indicating that the attached value should be used for consistent routing."""

PRIORITY: ProcessingKey.ValueType  # 1
"""key indicating that the attached value indicates relative priority of this message."""

TIMEOUT: ProcessingKey.ValueType  # 2
"""key indicating that the accompanied message has a finite validity. The attached value contains the number of milliseconds."""

NR_OF_RESULTS: ProcessingKey.ValueType  # 3
"""key indicating that the requester expects at most the given number of results from this message. Use -1 for unlimited."""

global___ProcessingKey = ProcessingKey

class SerializedObject(google.protobuf.message.Message):
    """Describes a serialized object"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TYPE_FIELD_NUMBER: builtins.int
    REVISION_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    type: typing.Text
    """The type identifier of the serialized object."""

    revision: typing.Text
    """The revision of the serialized form of the given type."""

    data: builtins.bytes
    """The actual data representing the object in serialized form."""

    def __init__(
        self,
        *,
        type: typing.Text = ...,
        revision: typing.Text = ...,
        data: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "data", b"data", "revision", b"revision", "type", b"type"
        ],
    ) -> None: ...

global___SerializedObject = SerializedObject

class MetaDataValue(google.protobuf.message.Message):
    """The value of a MetaData entry."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TEXT_VALUE_FIELD_NUMBER: builtins.int
    NUMBER_VALUE_FIELD_NUMBER: builtins.int
    BOOLEAN_VALUE_FIELD_NUMBER: builtins.int
    DOUBLE_VALUE_FIELD_NUMBER: builtins.int
    BYTES_VALUE_FIELD_NUMBER: builtins.int
    text_value: typing.Text
    """The text value of the Meta Data entry."""

    number_value: builtins.int
    """The numeric value of the Meta Data entry."""

    boolean_value: builtins.bool
    """The boolean value of the Meta Data entry."""

    double_value: builtins.float
    """The floating point value of the Meta Data entry."""

    @property
    def bytes_value(self) -> global___SerializedObject:
        """The binary value of the Meta Data entry."""
        pass
    def __init__(
        self,
        *,
        text_value: typing.Text = ...,
        number_value: builtins.int = ...,
        boolean_value: builtins.bool = ...,
        double_value: builtins.float = ...,
        bytes_value: typing.Optional[global___SerializedObject] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "boolean_value",
            b"boolean_value",
            "bytes_value",
            b"bytes_value",
            "data",
            b"data",
            "double_value",
            b"double_value",
            "number_value",
            b"number_value",
            "text_value",
            b"text_value",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "boolean_value",
            b"boolean_value",
            "bytes_value",
            b"bytes_value",
            "data",
            b"data",
            "double_value",
            b"double_value",
            "number_value",
            b"number_value",
            "text_value",
            b"text_value",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["data", b"data"]
    ) -> typing.Optional[
        typing_extensions.Literal[
            "text_value", "number_value", "boolean_value", "double_value", "bytes_value"
        ]
    ]: ...

global___MetaDataValue = MetaDataValue

class ProcessingInstruction(google.protobuf.message.Message):
    """An instruction for routing components when routing or processing a message."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    key: global___ProcessingKey.ValueType
    """The type of processing message."""

    @property
    def value(self) -> global___MetaDataValue:
        """The value associated with the processing key."""
        pass
    def __init__(
        self,
        *,
        key: global___ProcessingKey.ValueType = ...,
        value: typing.Optional[global___MetaDataValue] = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["value", b"value"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]
    ) -> None: ...

global___ProcessingInstruction = ProcessingInstruction

class ErrorMessage(google.protobuf.message.Message):
    """Message containing details of an error"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MESSAGE_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    ERROR_CODE_FIELD_NUMBER: builtins.int
    message: typing.Text
    """A human readable message explaining the error"""

    location: typing.Text
    """A description of the location (client component, server) where the error occurred"""

    @property
    def details(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A collection of messages providing more details about root causes of the error"""
        pass
    error_code: typing.Text
    """An Error Code identifying the type of error"""

    def __init__(
        self,
        *,
        message: typing.Text = ...,
        location: typing.Text = ...,
        details: typing.Optional[typing.Iterable[typing.Text]] = ...,
        error_code: typing.Text = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "details",
            b"details",
            "error_code",
            b"error_code",
            "location",
            b"location",
            "message",
            b"message",
        ],
    ) -> None: ...

global___ErrorMessage = ErrorMessage

class FlowControl(google.protobuf.message.Message):
    """Message used for Flow Control instruction, providing the counterpart with additional permits for sending messages"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLIENT_ID_FIELD_NUMBER: builtins.int
    PERMITS_FIELD_NUMBER: builtins.int
    client_id: typing.Text
    """The ClientID of the component providing additional permits"""

    permits: builtins.int
    """The number of permits to provide"""

    def __init__(
        self,
        *,
        client_id: typing.Text = ...,
        permits: builtins.int = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "client_id", b"client_id", "permits", b"permits"
        ],
    ) -> None: ...

global___FlowControl = FlowControl

class InstructionAck(google.protobuf.message.Message):
    """Message describing instruction acknowledgement"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTRUCTION_ID_FIELD_NUMBER: builtins.int
    SUCCESS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    instruction_id: typing.Text
    """The identifier of the instruction"""

    success: builtins.bool
    """Indicator whether the instruction was acknowledged successfully"""

    @property
    def error(self) -> global___ErrorMessage:
        """Set if instruction acknowledgement failed."""
        pass
    def __init__(
        self,
        *,
        instruction_id: typing.Text = ...,
        success: builtins.bool = ...,
        error: typing.Optional[global___ErrorMessage] = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["error", b"error"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "error",
            b"error",
            "instruction_id",
            b"instruction_id",
            "success",
            b"success",
        ],
    ) -> None: ...

global___InstructionAck = InstructionAck
