// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: graphscope/proto/query_args.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_graphscope_2fproto_2fquery_5fargs_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_graphscope_2fproto_2fquery_5fargs_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_graphscope_2fproto_2fquery_5fargs_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_graphscope_2fproto_2fquery_5fargs_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_graphscope_2fproto_2fquery_5fargs_2eproto;
namespace gs {
namespace rpc {
class QueryArgs;
class QueryArgsDefaultTypeInternal;
extern QueryArgsDefaultTypeInternal _QueryArgs_default_instance_;
}  // namespace rpc
}  // namespace gs
PROTOBUF_NAMESPACE_OPEN
template<> ::gs::rpc::QueryArgs* Arena::CreateMaybeMessage<::gs::rpc::QueryArgs>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace gs {
namespace rpc {

// ===================================================================

class QueryArgs PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gs.rpc.QueryArgs) */ {
 public:
  inline QueryArgs() : QueryArgs(nullptr) {}
  virtual ~QueryArgs();

  QueryArgs(const QueryArgs& from);
  QueryArgs(QueryArgs&& from) noexcept
    : QueryArgs() {
    *this = ::std::move(from);
  }

  inline QueryArgs& operator=(const QueryArgs& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryArgs& operator=(QueryArgs&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryArgs* internal_default_instance() {
    return reinterpret_cast<const QueryArgs*>(
               &_QueryArgs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(QueryArgs& a, QueryArgs& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryArgs* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryArgs* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryArgs* New() const final {
    return CreateMaybeMessage<QueryArgs>(nullptr);
  }

  QueryArgs* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryArgs>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryArgs& from);
  void MergeFrom(const QueryArgs& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryArgs* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gs.rpc.QueryArgs";
  }
  protected:
  explicit QueryArgs(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_graphscope_2fproto_2fquery_5fargs_2eproto);
    return ::descriptor_table_graphscope_2fproto_2fquery_5fargs_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArgsFieldNumber = 1,
  };
  // repeated .google.protobuf.Any args = 1;
  int args_size() const;
  private:
  int _internal_args_size() const;
  public:
  void clear_args();
  PROTOBUF_NAMESPACE_ID::Any* mutable_args(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< PROTOBUF_NAMESPACE_ID::Any >*
      mutable_args();
  private:
  const PROTOBUF_NAMESPACE_ID::Any& _internal_args(int index) const;
  PROTOBUF_NAMESPACE_ID::Any* _internal_add_args();
  public:
  const PROTOBUF_NAMESPACE_ID::Any& args(int index) const;
  PROTOBUF_NAMESPACE_ID::Any* add_args();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< PROTOBUF_NAMESPACE_ID::Any >&
      args() const;

  // @@protoc_insertion_point(class_scope:gs.rpc.QueryArgs)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< PROTOBUF_NAMESPACE_ID::Any > args_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_graphscope_2fproto_2fquery_5fargs_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// QueryArgs

// repeated .google.protobuf.Any args = 1;
inline int QueryArgs::_internal_args_size() const {
  return args_.size();
}
inline int QueryArgs::args_size() const {
  return _internal_args_size();
}
inline PROTOBUF_NAMESPACE_ID::Any* QueryArgs::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:gs.rpc.QueryArgs.args)
  return args_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< PROTOBUF_NAMESPACE_ID::Any >*
QueryArgs::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:gs.rpc.QueryArgs.args)
  return &args_;
}
inline const PROTOBUF_NAMESPACE_ID::Any& QueryArgs::_internal_args(int index) const {
  return args_.Get(index);
}
inline const PROTOBUF_NAMESPACE_ID::Any& QueryArgs::args(int index) const {
  // @@protoc_insertion_point(field_get:gs.rpc.QueryArgs.args)
  return _internal_args(index);
}
inline PROTOBUF_NAMESPACE_ID::Any* QueryArgs::_internal_add_args() {
  return args_.Add();
}
inline PROTOBUF_NAMESPACE_ID::Any* QueryArgs::add_args() {
  // @@protoc_insertion_point(field_add:gs.rpc.QueryArgs.args)
  return _internal_add_args();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< PROTOBUF_NAMESPACE_ID::Any >&
QueryArgs::args() const {
  // @@protoc_insertion_point(field_list:gs.rpc.QueryArgs.args)
  return args_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc
}  // namespace gs

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_graphscope_2fproto_2fquery_5fargs_2eproto
