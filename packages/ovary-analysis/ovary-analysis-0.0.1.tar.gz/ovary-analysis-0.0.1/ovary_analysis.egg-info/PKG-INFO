Metadata-Version: 2.1
Name: ovary-analysis
Version: 0.0.1
Summary: ovarian follicle analysis pipeline
Home-page: https://git.bsse.ethz.ch/iber/ovary-analysis
Author: Kevin Yamauchi
License: BSD 3-Clause
Download-URL: https://git.bsse.ethz.ch/iber/ovary-analysis
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: X11 Applications :: Qt
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Visualization
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Topic :: Utilities
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Requires-Python: >3.7
Description-Content-Type: text/markdown
License-File: LICENSE

# ovary-analysis

Image processing pipeline for ultrasound images of ovaries.

# Installation
First, clone the repository

`git clone git@git.bsse.ethz.ch:iber/ovary-analysis.git`

Then, cd to the directory you cloned the repository into

`cd ovary-analysis`

Create a new python environment for the ovary-analysis package. If you are using anaconda, you can do the following

`conda create -n ovary-analysis python=3.7`

Activate your new environment

`conda activate ovary-analysis`

Install the ovary-analysis package with with. If you are just using the package, install using:

`pip install .`

If you want to install for development, use the pip editable mode:

`pip install -e .`

# Developer tools
We use black and flake8 for formatting assistance. To install them, run the following from the repository directory

`pip install -r requirements-dev.txt`

Finally, install the pre-commit hooks.

`pre-commit install`

