Metadata-Version: 2.1
Name: kaniko-remote
Version: 0.5.0
Summary: Enable familiar `docker build` semantics using kaniko on k8s
Author: Lucas
Author-email: me@lucas.fish
License: MIT License
Project-URL: github, https://github.com/JJ11teen/kaniko-remote
Project-URL: pypi, https://pypi.org/project/kaniko-remote
Keywords: kaniko,kubernetes,k8s,docker,build,images,remote
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
Provides-Extra: tests
Provides-Extra: docker
License-File: LICENSE

# kaniko-remote
Enable familiar `docker build` semantics using kaniko remotely on a preconfigured k8s cluster

## Quick Start
Install with pip, optionally with the docker alias:

```bash
pip install kaniko-remote[docker]
```

Run docker build commands as expected:
```bash
docker build -t registry.fish/my/cool-image:latest .
# Or without the docker alias:
kaniko-remote build -t registry.fish/my/cool-image:latest .
```

## Config
```yaml
kubernetes:
  # kubeconfig: 
  namespace: kaniko-remote
builder:
  instanceId: lucas
  cpu: 1
  memory: 1G
  kanikoImage: ""
  setupImage: ""
  additionalLabels:
    yes: hello
  additionalAnnotations:
    why: not
  kanikoArgs:
  - --use-new-run
auth:
  - url: eliiza.azurecr.io
    mount: always
    type: acr
    env:
    - fromSecret: eliiza-azurecr-push-sp
  - url: gs://kaniko-bucket
    type: pod-only
  - url: s3://kaniko-bucket
  - url: https://myaccount.blob.core.windows.net/container
```

```yaml
kubernetes:
  namespace: kaniko-remote
builder:
  instanceId: lucas
auth:
  - url: eliiza.azurecr.io
    mount: always
    type: acr
    env:
    - fromSecret: eliiza-azurecr-push-sp
```

## License

kaniko-remote is licensed under the MIT license

Dependencies with other licenses are included under `/docs/3rd_party_licenses`

