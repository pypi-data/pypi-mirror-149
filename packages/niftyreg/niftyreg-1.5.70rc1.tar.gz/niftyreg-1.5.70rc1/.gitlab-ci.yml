# .gitlab-ci.yml

stages:
  - build
  - test
  - cleanup


before_script:
  - export src_dir="${CI_PROJECT_DIR}"
  - export git_hash="${CI_COMMIT_SHA:0:6}"
  - export pb_dir="${CI_PROJECT_DIR}-build-${git_hash}"
  - hostname
  - whoami
  - pwd
  - echo "Sources - ${src_dir}"
  - echo "Commit - ${git_hash}"
  - echo "Project build - ${pb_dir}"

##############################################################
### BUILD


Mac-build:

  stage: build

  script:
    - mkdir -p ${pb_dir}/llvm
    - cd ${pb_dir}/llvm
    - cmake
          -DCMAKE_CXX_COMPILER=g++
          -DCMAKE_C_COMPILER=gcc
          -DCMAKE_BUILD_TYPE=Release
          -DBUILD_ALL_DEP=ON
          -DUSE_CUDA=ON
          -DUSE_OPENCL=ON
          -DUSE_SSE=ON
          -DUSE_OPENMP=OFF
          -DBUILD_TESTING=ON
          -DTESTING_2D_FILE=${src_dir}/reg-test/target_2D.nii.gz
          -DTESTING_3D_FILE=${src_dir}/reg-test/target_3D.nii.gz
          ${src_dir}
    - cmake
          -DCMAKE_CXX_COMPILER=g++
          -DCMAKE_C_COMPILER=gcc
          -DCMAKE_BUILD_TYPE=Release
          -DBUILD_ALL_DEP=ON
          -DUSE_CUDA=ON
          -DUSE_OPENCL=ON
          -DUSE_SSE=ON
          -DUSE_OPENMP=OFF
          -DBUILD_TESTING=ON
          -DTESTING_2D_FILE=${src_dir}/reg-test/target_2D.nii.gz
          -DTESTING_3D_FILE=${src_dir}/reg-test/target_3D.nii.gz
          ${src_dir}
    - make -j 4
    - mkdir -p ${pb_dir}/gnu
    - mkdir -p ${pb_dir}/gnu/reg-test
    - cd ${pb_dir}/gnu
    - cp -R ${pb_dir}/llvm/reg-test/test-data ${pb_dir}/gnu/reg-test/test-data
    - cmake
          -DCMAKE_CXX_COMPILER=g++-7
          -DCMAKE_C_COMPILER=gcc-7
          -DCMAKE_BUILD_TYPE=Release
          -DBUILD_ALL_DEP=ON
          -DUSE_CUDA=ON
          -DCUDA_HOST_COMPILER=/usr/bin/clang
          -DUSE_OPENCL=ON
          -DUSE_SSE=ON
          -DUSE_OPENMP=ON
          -DBUILD_TESTING=ON
          -DTESTING_2D_FILE=${src_dir}/reg-test/target_2D.nii.gz
          -DTESTING_3D_FILE=${src_dir}/reg-test/target_3D.nii.gz
          ${src_dir}
    - cmake
          -DCMAKE_CXX_COMPILER=g++-7
          -DCMAKE_C_COMPILER=gcc-7
          -DCMAKE_BUILD_TYPE=Release
          -DBUILD_ALL_DEP=ON
          -DUSE_CUDA=ON
          -DCUDA_HOST_COMPILER=/usr/bin/clang
          -DUSE_OPENCL=ON
          -DUSE_SSE=ON
          -DUSE_OPENMP=ON
          -DBUILD_TESTING=ON
          -DTESTING_2D_FILE=${src_dir}/reg-test/target_2D.nii.gz
          -DTESTING_3D_FILE=${src_dir}/reg-test/target_3D.nii.gz
          ${src_dir}
    - make -j 4

  only:
    - branches

  tags:
    - mac


Linux-build:

  stage: build

  script:
    - mkdir -p ${pb_dir}
    - cd ${pb_dir}
    - cmake
          -DCMAKE_BUILD_TYPE=Release
          -DBUILD_ALL_DEP=ON
          -DUSE_CUDA=ON
          -DUSE_OPENCL=ON
          -DUSE_SSE=ON
          -DUSE_OPENMP=ON
          -DBUILD_TESTING=ON
          -DTESTING_2D_FILE=${src_dir}/reg-test/target_2D.nii.gz
          -DTESTING_3D_FILE=${src_dir}/reg-test/target_3D.nii.gz
          ${src_dir}
    - cmake
          -DCMAKE_BUILD_TYPE=Release
          -DBUILD_ALL_DEP=ON
          -DUSE_CUDA=ON
          -DUSE_OPENCL=ON
          -DUSE_SSE=ON
          -DUSE_OPENMP=ON
          -DBUILD_TESTING=ON
          -DTESTING_2D_FILE=${src_dir}/reg-test/target_2D.nii.gz
          -DTESTING_3D_FILE=${src_dir}/reg-test/target_3D.nii.gz
          ${src_dir}
    - make -j 4

  only:
    - branches

  tags:
    - linux


Windows-build:

  stage: build

  before_script:
    - set src_dir="%CI_PROJECT_DIR%"
    - set git_hash="%CI_COMMIT_SHA:~0,6%"
    - set pb_dir="%CI_PROJECT_DIR%-build-%git_hash%"
    - hostname
    - whoami
    - echo %cd%
    - echo "Sources - %src_dir%"
    - echo "Commit - %git_hash%"
    - echo "Project build - %pb_dir%"

  script:
    - if not exist %pb_dir% mkdir -p %pb_dir%
    - cd %pb_dir%
    - set cmake="C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cmake.exe"
    - call %cmake%
          -G "Visual Studio 15 2017 Win64"
          -DCMAKE_BUILD_TYPE=Release
          -DBUILD_ALL_DEP=ON
          -DUSE_CUDA=ON
          -DUSE_OPENCL=ON
          -DUSE_SSE=ON
          -DUSE_OPENMP=ON
          -DBUILD_TESTING=ON
          -DTESTING_2D_FILE="%src_dir%/reg-test/target_2D.nii.gz"
          -DTESTING_3D_FILE="%src_dir%/reg-test/target_3D.nii.gz"
          %src_dir%
    - set msbuild="C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/MSBuild/15.0/Bin/MSBuild.exe"
    - echo "%msbuild%"
    - call %msbuild% NiftyReg.sln /t:Build /p:Configuration=Release

  only:
    - branches

  tags:
    - windows

##############################################################
### TEST


Mac-test:

  stage: test

  script:
    - cd ${pb_dir}/llvm
    - ctest -V
    - cd ${pb_dir}/gnu
    - ctest -V

  only:
    - branches

  tags:
    - mac


Linux-test:

  stage: test

  script:
    - cd ${pb_dir}
    - ctest -V

  only:
    - branches

  tags:
    - mac


Windows-test:

  stage: test

  before_script:
    - set src_dir="%CI_PROJECT_DIR%"
    - set git_hash="%CI_COMMIT_SHA:~0,6%"
    - set pb_dir="%CI_PROJECT_DIR%-build-%git_hash%"
    - hostname
    - whoami
    - echo %cd%
    - echo "Sources - %src_dir%"
    - echo "Commit - %git_hash%"
    - echo "Project build - %pb_dir%"

  script:
    - cd %pb_dir%
    - set ctest="C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/ctest.exe"
    - call %ctest% -V

  only:
    - branches

  tags:
    - windows


##############################################################
### CLEAN


Mac-cleanup:

  stage: cleanup

  script:
    - rm -rf ${pb_dir}

  when: always

  only:
    - branches

  tags:
    - mac


Linux-cleanup:

  stage: cleanup

  script:
    - rm -rf ${pb_dir}

  when: always

  only:
    - branches

  tags:
    - linux


Windows-cleanup:

  stage: cleanup

  before_script:
    - set src_dir="%CI_PROJECT_DIR%"
    - set git_hash="%CI_COMMIT_SHA:~0,6%"
    - set pb_dir="%CI_PROJECT_DIR%-build-%git_hash%"
    - hostname
    - whoami
    - echo %cd%
    - echo "Sources - %src_dir%"
    - echo "Commit - %git_hash%"
    - echo "Project build - %pb_dir%"

  script:
    - call rd /s /q %pb_dir%

  when: always

  only:
    - branches

  tags:
    - windows
