# This orchestration will deploy the ghost blogging platform.
# This orchestration assumes that the mysql server (mariadb) is online and reachable
# via the MySQL command line client.
#
---

- jobs:
  - ARG: mysql_root_password SuperSecrete
  - ARG: ghost_db_pw Secrete
  - ARG: ghost_user_name ghost
  - ARG: domain_name ghost.localdomain
  - ARG: domain_proto http
  - ARG: domain_port 2368

  ### Scan the environment for a given cached argument
  - QUERY: mysql_host

  ### Target run environment
  - RUN: --stdout-arg ghost_db_source ip -o r g 1 | awk '{print $7}'

  # Create our NGINX config for our ghost proxy
  - COPY: --blueprint files/nginx-ghost.j2 "/etc/nginx/conf.d/{{ domain_name }}.conf"

  - RUN: >-
      if systemctl is-active firewalld; then
      firewall-cmd --zone=public --permanent --add-service=http;
      firewall-cmd --zone=public --permanent --add-service=https;
      firewall-cmd --reload;
      fi

  - SERVICE: --enable --restarted nginx.service

  # Ghost needs sudo privileges, this will allow that to happen via the ghost-application group
  - RUN: >-
      groupadd --system ghost-application || true

  - RUN: >-
      echo '%ghost-application ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/ghost-application

  - RUN: chmod 0440 /etc/sudoers.d/ghost-application

  # Creates a new environment variable for the application database name
  - RUN: --stdout-arg db_name echo "{{ domain_name }}" | sed -e 's/\./_/g' -e 's/-/_/g'

  # Create application user
  - RUN: >-
      adduser
      --home-dir "/var/www/{{ domain_name }}"
      --comment "ghost application user"
      --groups ghost-application,systemd-journal
      --create-home
      --shell /bin/bash
      "{{ ghost_user_name }}" || true

  # Globally install ghost-cli
  - RUN: command -v ghost || npm install ghost-cli@latest -g

  # Ensure our client mariadb client libs are installed.
  - RUN: dnf install -y mariadb

  # Create the application database
  - RUN: >-
      mysql -u root -h {{ ghost_db_host }} -p{{ mysql_root_password }} -e "CREATE DATABASE {{ db_name }}"

  - RUN: >-
      mysql -u root -h {{ ghost_db_host }} -p{{ mysql_root_password }} -e "CREATE USER '{{ db_name }}'@'{{ ghost_db_source }}' IDENTIFIED BY '{{ ghost_db_pw }}'"

  - RUN: >-
      mysql -u root -h {{ ghost_db_host }} -p{{ mysql_root_password }} -e "GRANT ALL PRIVILEGES ON {{ db_name }}.* TO '{{ db_name }}'@'{{ ghost_db_source }}'"

  - RUN: >-
      [ -f /var/www/{{ domain_name }}/config.production.json ] ||
      su --preserve-environment {{ ghost_user_name }} -c 'ghost install local
      --url "{{ domain_proto }}://{{ domain_name }}"
      --port "{{ domain_port }}"
      --db mysql
      --dbhost "{{ ghost_db_host }}"
      --dbuser "{{ db_name }}"
      --dbpass "{{ ghost_db_pw }}"
      --dbname "{{ db_name }}"
      --no-prompt
      --no-stack
      --no-color
      --no-star
      --auto
      --process systemd
      --pname "{{ db_name }}"'

  - RUN: >-
      [ -f /var/www/{{ domain_name }}/config.production.json ] ||
      su --preserve-environment {{ ghost_user_name }} -c "mv /var/www/{{ domain_name }}/config.development.json /var/www/{{ domain_name }}/config.production.json"

  - ADD: --blueprint files/ghost-systemd.service.j2 '/etc/systemd/system/ghost-{{ domain_name | replace(".", "-") }}.service'

  - RUN: systemctl daemon-reload

  - RUN: systemctl start ghost-{{ domain_name | replace(".", "-") }}.service

  - RUN: systemctl enable ghost-{{ domain_name | replace(".", "-") }}.service
