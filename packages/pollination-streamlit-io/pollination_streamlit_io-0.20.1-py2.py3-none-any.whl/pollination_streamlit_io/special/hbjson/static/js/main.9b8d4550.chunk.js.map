{"version":3,"sources":["SpecialHBJSON.tsx","index.tsx"],"names":["SpecialHBJSON","props","render","_readHBJSON","ms","d","state","delay","Promise","resolve","reject","setTimeout","sync_token","window","parent","chrome","webview","hostObjects","sync","hbjson","PassHBJSON","then","result","Streamlit","setComponentValue","initialState","args","readHBJSON","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"wQAsBMA,E,kDAEJ,WAAmBC,GAAwB,IAAD,uBACxC,cAAMA,IAgBDC,OAAS,WACd,OACE,sCAnBsC,EAuBlCC,YAAc,WACpB,IAAmBC,EAYbC,EAAI,EAAKC,MAAMC,OAZFH,EAaTC,EAZM,IAAIG,SAAQ,SAACC,EAASC,GAAV,OAC1BC,YAAW,WACP,IAAIC,EAAaC,OAAOC,OAAOC,OAAOC,QAAQC,YAC3CC,KAAKC,OAAOC,aAEfX,EADaG,KAEZR,OAMMiB,MAAK,SAAAC,GACdC,IAAUC,kBAAkBF,OAlChC,IAEMG,EAAe,CACnBlB,MAHY,EAAKN,MAAMyB,KAAX,OAJ0B,OAUxC,EAAKpB,MAAL,eACKmB,GAGLZ,OAAOC,OAAOa,WAAa,EAAKxB,YAdQ,E,uBAFhByB,KA6CbC,cAAwB7B,GC/DvC8B,IAAS5B,OACP,kBAAC,IAAM6B,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.9b8d4550.chunk.js","sourcesContent":["import {\n  ComponentProps,\n  withStreamlitConnection,\n  StreamlitComponentBase,\n  Streamlit,\n} from 'streamlit-component-lib'\nimport React, { \n  ReactNode } from 'react'\n\nimport styles from './style.module.scss';\n\ninterface State {\n  delay: number\n}\n\ndeclare global {\n  interface Window {\n    chrome: any\n    readHBJSON: any\n  }\n}\n\nclass SpecialHBJSON extends StreamlitComponentBase<State> {\n\n  public constructor(props: ComponentProps) {\n    super(props)\n\n    // Values from user input\n    const delay = this.props.args['delay'] as number\n\n    const initialState = {\n      delay: delay\n    } as State\n\n    this.state = {\n      ...initialState\n    };\n    \n    window.parent.readHBJSON = this._readHBJSON;\n  }\n\n  public render = (): ReactNode => {\n    return (\n      <p>HBJSON</p>\n    )\n  }\n\n  private _readHBJSON = () : void => {\n    const getResult = (ms: number) => {\n      var promise = new Promise((resolve, reject) => \n      setTimeout(() => {\n          var sync_token = window.parent.chrome.webview.hostObjects\n            .sync.hbjson.PassHBJSON();\n          let result = sync_token;\n          resolve(result);\n        }, ms)\n      );\n\n      return promise;\n    };\n    const d = this.state.delay;\n    getResult(d).then(result => {\n        Streamlit.setComponentValue(result);\n      });\n  }\n}\n\nexport default withStreamlitConnection(SpecialHBJSON)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport SpecialHBJSON from \"./SpecialHBJSON\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <SpecialHBJSON />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}