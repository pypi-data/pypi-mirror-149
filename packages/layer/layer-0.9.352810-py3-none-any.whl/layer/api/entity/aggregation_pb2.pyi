"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Aggregation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Method:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _MethodEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Aggregation._Method.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        METHOD_INVALID: Aggregation._Method.ValueType  # 0
        METHOD_SUM: Aggregation._Method.ValueType  # 1
        METHOD_COUNT: Aggregation._Method.ValueType  # 2
        METHOD_COUNT_DISTINCT: Aggregation._Method.ValueType  # 3
        METHOD_MIN: Aggregation._Method.ValueType  # 4
        METHOD_MAX: Aggregation._Method.ValueType  # 5
        METHOD_AVG: Aggregation._Method.ValueType  # 6
        METHOD_MEAN: Aggregation._Method.ValueType  # 7
        METHOD_STD: Aggregation._Method.ValueType  # 8
        METHOD_MEDIAN: Aggregation._Method.ValueType  # 9
        METHOD_VARIANCE: Aggregation._Method.ValueType  # 10
    class Method(_Method, metaclass=_MethodEnumTypeWrapper):
        pass

    METHOD_INVALID: Aggregation.Method.ValueType  # 0
    METHOD_SUM: Aggregation.Method.ValueType  # 1
    METHOD_COUNT: Aggregation.Method.ValueType  # 2
    METHOD_COUNT_DISTINCT: Aggregation.Method.ValueType  # 3
    METHOD_MIN: Aggregation.Method.ValueType  # 4
    METHOD_MAX: Aggregation.Method.ValueType  # 5
    METHOD_AVG: Aggregation.Method.ValueType  # 6
    METHOD_MEAN: Aggregation.Method.ValueType  # 7
    METHOD_STD: Aggregation.Method.ValueType  # 8
    METHOD_MEDIAN: Aggregation.Method.ValueType  # 9
    METHOD_VARIANCE: Aggregation.Method.ValueType  # 10

    class Interval(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class _Unit:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _UnitEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Aggregation.Interval._Unit.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            UNIT_INVALID: Aggregation.Interval._Unit.ValueType  # 0
            UNIT_MINUTES: Aggregation.Interval._Unit.ValueType  # 1
            UNIT_HOURS: Aggregation.Interval._Unit.ValueType  # 2
            UNIT_DAYS: Aggregation.Interval._Unit.ValueType  # 3
            UNIT_WEEKS: Aggregation.Interval._Unit.ValueType  # 4
            UNIT_MONTHS: Aggregation.Interval._Unit.ValueType  # 5
            UNIT_YEARS: Aggregation.Interval._Unit.ValueType  # 6
        class Unit(_Unit, metaclass=_UnitEnumTypeWrapper):
            pass

        UNIT_INVALID: Aggregation.Interval.Unit.ValueType  # 0
        UNIT_MINUTES: Aggregation.Interval.Unit.ValueType  # 1
        UNIT_HOURS: Aggregation.Interval.Unit.ValueType  # 2
        UNIT_DAYS: Aggregation.Interval.Unit.ValueType  # 3
        UNIT_WEEKS: Aggregation.Interval.Unit.ValueType  # 4
        UNIT_MONTHS: Aggregation.Interval.Unit.ValueType  # 5
        UNIT_YEARS: Aggregation.Interval.Unit.ValueType  # 6

        LENGTH_FIELD_NUMBER: builtins.int
        UNIT_FIELD_NUMBER: builtins.int
        length: builtins.int
        unit: global___Aggregation.Interval.Unit.ValueType
        def __init__(self,
            *,
            length: builtins.int = ...,
            unit: global___Aggregation.Interval.Unit.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["length",b"length","unit",b"unit"]) -> None: ...

    METHOD_FIELD_NUMBER: builtins.int
    WINDOW_FIELD_NUMBER: builtins.int
    SLIDE_FIELD_NUMBER: builtins.int
    method: global___Aggregation.Method.ValueType
    @property
    def window(self) -> global___Aggregation.Interval: ...
    @property
    def slide(self) -> global___Aggregation.Interval: ...
    def __init__(self,
        *,
        method: global___Aggregation.Method.ValueType = ...,
        window: typing.Optional[global___Aggregation.Interval] = ...,
        slide: typing.Optional[global___Aggregation.Interval] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["slide",b"slide","window",b"window"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["method",b"method","slide",b"slide","window",b"window"]) -> None: ...
global___Aggregation = Aggregation
