"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import layer.api.entity.aggregation_pb2
import layer.api.ids_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class SqlFeature(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    QUERY_TEXT_FIELD_NUMBER: builtins.int
    CREATED_BY_ID_FIELD_NUMBER: builtins.int
    CREATED_TIMESTAMP_FIELD_NUMBER: builtins.int
    UPDATED_TIMESTAMP_FIELD_NUMBER: builtins.int
    ORGANIZATION_ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    AGGREGATIONS_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> api.ids_pb2.FeatureId: ...
    name: typing.Text
    query_text: typing.Text
    @property
    def created_by_id(self) -> api.ids_pb2.UserId: ...
    created_timestamp: builtins.int
    updated_timestamp: builtins.int
    @property
    def organization_id(self) -> api.ids_pb2.OrganizationId: ...
    description: typing.Text
    @property
    def aggregations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[api.entity.aggregation_pb2.Aggregation]: ...
    def __init__(self,
        *,
        id: typing.Optional[api.ids_pb2.FeatureId] = ...,
        name: typing.Text = ...,
        query_text: typing.Text = ...,
        created_by_id: typing.Optional[api.ids_pb2.UserId] = ...,
        created_timestamp: builtins.int = ...,
        updated_timestamp: builtins.int = ...,
        organization_id: typing.Optional[api.ids_pb2.OrganizationId] = ...,
        description: typing.Text = ...,
        aggregations: typing.Optional[typing.Iterable[api.entity.aggregation_pb2.Aggregation]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["created_by_id",b"created_by_id","id",b"id","organization_id",b"organization_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["aggregations",b"aggregations","created_by_id",b"created_by_id","created_timestamp",b"created_timestamp","description",b"description","id",b"id","name",b"name","organization_id",b"organization_id","query_text",b"query_text","updated_timestamp",b"updated_timestamp"]) -> None: ...
global___SqlFeature = SqlFeature
