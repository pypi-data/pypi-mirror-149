[tool.poetry]
name = "monkeytale"
version = "0.2.0"
description = "An opinionated markup language for composing, documenting, and visualizing a novel."
authors = ["Monkeytail <monkeytail@dwlib.com>"]
readme = "README.md"
keywords = [
    "novel",
    "structure",
    "composition",
    "documentation",
    "visualization",
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: The Unlicense (Unlicense)",
    "Programming Language :: Python :: 3.10",
    "Topic :: Documentation",
    "Topic :: Text Processing",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Text Processing :: Markup",
]

[tool.poetry.dependencies]
python = "^3.10"
click = "^8.0.0"
loguru = "^0.6.0"
sh = "^1.14.2"
textX = "^3.0.0"
keyring = "^23.5.0"
pendulum = "^2.1.2"
python-docx = "^0.8.11"
identify = "^2.5.0"
spacy = "^3.3.0"
NRCLex = "^3.0.0"

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
black = { extras = ["jupyter"], version = "^22.3.0" }
jupyter = "^1.0.0"
devtools = "^0.8.0"
isort = "^5.10.1"
pytest-cov = "^3.0.0"
bandit = "^1.7.4"
hypothesis = "^6.46.1"
hypothesis-faker = "^0.0.23"

[tool.poetry.scripts]
"@" = "src.__ini__:cli"
"monkeytale" = "src.__init__:cli"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_variable = [
    "monkeytale/__init__.py:__version__",
    "pyproject.toml:version",
]
version_pattern = ["README.md:# Monkeytale v{version}"]
branch = "main"
build_command = "pip install poetry && poetry build"
major_on_zero = false # Version 0 allows breaking changes without bumping major version
repository = "testpypi" # Default to the safety of a test environment
upload_to_repository = true # PyPI or TestPyPI
upload_to_release = true # Github releases
