# automatically generated by the FlatBuffers compiler, do not modify

# namespace: xbrnetwork

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserKey(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserKey()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserKey(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserKey
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # User key - a Ed25519 public key - for authenticating using WAMP-cryptosign.
    # UserKey
    def Pubkey(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 1))
        return 0

    # UserKey
    def PubkeyAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint8Flags, o)
        return 0

    # UserKey
    def PubkeyLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserKey
    def PubkeyIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # Timestamp (epoch time in ns) of initial creation of this record.
    # UserKey
    def Created(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # ID of user account this user key is owned by.
    # UserKey
    def Owner(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 1))
        return 0

    # UserKey
    def OwnerAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint8Flags, o)
        return 0

    # UserKey
    def OwnerLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserKey
    def OwnerIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

def Start(builder): builder.StartObject(3)
def UserKeyStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddPubkey(builder, pubkey): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(pubkey), 0)
def UserKeyAddPubkey(builder, pubkey):
    """This method is deprecated. Please switch to AddPubkey."""
    return AddPubkey(builder, pubkey)
def StartPubkeyVector(builder, numElems): return builder.StartVector(1, numElems, 1)
def UserKeyStartPubkeyVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartPubkeyVector(builder, numElems)
def AddCreated(builder, created): builder.PrependUint64Slot(1, created, 0)
def UserKeyAddCreated(builder, created):
    """This method is deprecated. Please switch to AddCreated."""
    return AddCreated(builder, created)
def AddOwner(builder, owner): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(owner), 0)
def UserKeyAddOwner(builder, owner):
    """This method is deprecated. Please switch to AddOwner."""
    return AddOwner(builder, owner)
def StartOwnerVector(builder, numElems): return builder.StartVector(1, numElems, 1)
def UserKeyStartOwnerVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartOwnerVector(builder, numElems)
def End(builder): return builder.EndObject()
def UserKeyEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)