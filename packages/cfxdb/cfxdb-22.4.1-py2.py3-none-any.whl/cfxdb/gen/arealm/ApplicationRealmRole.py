# automatically generated by the FlatBuffers compiler, do not modify

# namespace: arealm

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# Association (N:M) between roles and application realms, both defined independently at the management realm level.
class ApplicationRealmRole(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ApplicationRealmRole()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsApplicationRealmRole(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ApplicationRealmRole
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ID of the role being associated with an application realm.
    # ApplicationRealmRole
    def RoleOid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = o + self._tab.Pos
            from ..oid_t import oid_t
            obj = oid_t()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ID of the application realm this role is associated with.
    # ApplicationRealmRole
    def ArealmOid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from ..oid_t import oid_t
            obj = oid_t()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def Start(builder): builder.StartObject(2)
def ApplicationRealmRoleStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddRoleOid(builder, roleOid): builder.PrependStructSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(roleOid), 0)
def ApplicationRealmRoleAddRoleOid(builder, roleOid):
    """This method is deprecated. Please switch to AddRoleOid."""
    return AddRoleOid(builder, roleOid)
def AddArealmOid(builder, arealmOid): builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(arealmOid), 0)
def ApplicationRealmRoleAddArealmOid(builder, arealmOid):
    """This method is deprecated. Please switch to AddArealmOid."""
    return AddArealmOid(builder, arealmOid)
def End(builder): return builder.EndObject()
def ApplicationRealmRoleEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)