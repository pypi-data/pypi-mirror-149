Metadata-Version: 2.1
Name: pyasn1-ldap
Version: 0.1.0
Summary: LDAP protocol module
Home-page: https://github.com/hokuda/pyasn1_ldap
Author: Hisanobu Okuda
License: LICENSE
Platform: any
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: System :: Monitoring
Classifier: Topic :: System :: Networking :: Monitoring
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Systems Administration :: Authentication/Directory :: LDAP
Requires-Python: >=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*
License-File: LICENSE
Requires-Dist: pyasn1 (<0.6.0,>=0.4.6)

pyasn1_ldap
===========

*Python module to decode ASN1 stream of LDAP message using pyasn1*

Install
-------

::

   pip install pyasn1_ldap

Usage
-----

::

   #!/usr/bin/python
   from pyasn1.codec.ber.decoder import decode as ber_decoder
   from pyasn1_ldap import rfc4511

   hex_text = '302f020101602a020103041a41646d696e6973747261746f72404558414d504c45322e434f4d800950617373773072642e'
   substrate = bytes.fromhex(hex_text)
   ldap_message, rest = ber_decoder(substrate, asn1Spec=rfc4511.LDAPMessage())
   print(ldap_message)

   # the output should be:
   # LDAPMessage:
   #  messageID=1
   #  protocolOp=Choice:
   #   bindRequest=BindRequest:
   #    version=3
   #    name=Administrator@EXAMPLE2.COM
   #    authentication=AuthenticationChoice:
   #     simple=Passw0rd.

Thanks
------

- Thanks to `pyasn1 <https://github.com/etingof/pyasn1>`_ for implementing ASN.1 types and codecs.
- Thanks to `asn1ate <https://github.com/kimgr/asn1ate>`_ for implementing ASN.1 translation library.


