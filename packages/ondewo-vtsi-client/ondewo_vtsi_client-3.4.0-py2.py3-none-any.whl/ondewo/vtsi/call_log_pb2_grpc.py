# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from ondewo.vtsi import call_log_pb2 as ondewo_dot_vtsi_dot_call__log__pb2


class VoipCallLogsStub(object):
    """call log endpoints to be used by ondewo-sip-sim instances to transfer their log info to the voip manager
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetVoipLog = channel.unary_unary(
                '/ondewo.vtsi.VoipCallLogs/GetVoipLog',
                request_serializer=ondewo_dot_vtsi_dot_call__log__pb2.GetVoipLogRequest.SerializeToString,
                response_deserializer=ondewo_dot_vtsi_dot_call__log__pb2.GetVoipLogResponse.FromString,
                )
        self.ActivateSaveCallLogs = channel.unary_unary(
                '/ondewo.vtsi.VoipCallLogs/ActivateSaveCallLogs',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=ondewo_dot_vtsi_dot_call__log__pb2.SaveCallLogsResponse.FromString,
                )


class VoipCallLogsServicer(object):
    """call log endpoints to be used by ondewo-sip-sim instances to transfer their log info to the voip manager
    """

    def GetVoipLog(self, request, context):
        """// get all call IDs associated with a sip-id [PROTOTYPE IF MULTIPLE CALLS PER SIP INSTANCE ARE REALIZED, REMOVED FOR CLARITY]
        rpc GetCallIds (GetCallIdsRequest) returns (GetCallIdsResponse) {
        option (google.api.http) = {
        post: "/v2/{session=projects/*/agent/sessions/*}:GetCallIds"
        body: "*"
        };
        }

        get call log for single call instance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivateSaveCallLogs(self, request, context):
        """activate saving call logs in the voip manager
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VoipCallLogsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetVoipLog': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVoipLog,
                    request_deserializer=ondewo_dot_vtsi_dot_call__log__pb2.GetVoipLogRequest.FromString,
                    response_serializer=ondewo_dot_vtsi_dot_call__log__pb2.GetVoipLogResponse.SerializeToString,
            ),
            'ActivateSaveCallLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivateSaveCallLogs,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=ondewo_dot_vtsi_dot_call__log__pb2.SaveCallLogsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ondewo.vtsi.VoipCallLogs', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VoipCallLogs(object):
    """call log endpoints to be used by ondewo-sip-sim instances to transfer their log info to the voip manager
    """

    @staticmethod
    def GetVoipLog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.vtsi.VoipCallLogs/GetVoipLog',
            ondewo_dot_vtsi_dot_call__log__pb2.GetVoipLogRequest.SerializeToString,
            ondewo_dot_vtsi_dot_call__log__pb2.GetVoipLogResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActivateSaveCallLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.vtsi.VoipCallLogs/ActivateSaveCallLogs',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ondewo_dot_vtsi_dot_call__log__pb2.SaveCallLogsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
